{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "globalName": {
            "type": "string",
            "defaultValue": "ghops"
        },
        "adminPublicKey": {
            "type": "securestring"
        },
        "networkSecurityGroupRules": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "SSH",
                    "properties": {
                        "priority": 300,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "22"
                    }
                }
            ]
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azure"
        },
        "addressPrefixes": {
            "type": "array",
            "defaultValue": [
                "192.168.0.0/16"
            ]
        },
        "subnets": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "default",
                    "properties": {
                        "addressPrefix": "192.168.255.0/24"
                    }
                }
            ]
        },
        "publicIpAllocationMethod": {
            "type": "string",
            "allowedValues": [ "Static", "Dynamic" ],
            "defaultValue": "Dynamic"
        },
        "privateIPAllocationMethod": {
            "type": "string",
            "allowedValues": [ "Static", "Dynamic" ],
            "defaultValue": "Dynamic"
        },
        "publicIpAddressSku": {
            "type": "string",
            "allowedValues": [ "Basic", "Standard" ],
            "defaultValue": "Basic"
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "default"
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B1s"
        },
        "virtualMachineStorageAccountType": {
            "type": "string",
            "defaultValue": "Premium_LRS"
        },
        "virtualMachineImageReference": {
            "type": "object",
            "defaultValue": {
                "publisher": "canonical",
                "offer": "0001-com-ubuntu-server-focal",
                "sku": "20_04-lts-gen2",
                "version": "latest"
            }
        }
    },
    "variables": {
        "location": "germanywestcentral",
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "networkInterfaceName": "[parameters('globalName')]",
        "networkSecurityGroupName": "[parameters('globalName')]",
        "publicIpAddressName": "[parameters('globalName')]",
        "publicIpAddressDomainLabelName": "[parameters('globalName')]",
        "virtualMachineName": "[parameters('globalName')]",
        "virtualNetworkName": "[parameters('globalName')]",
        "virtualMachineOsDiskName": "[parameters('globalName')]"
    },
    "resources": [
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroupRules')]"
            }
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": "[parameters('subnets')]"
            }
        },
        {
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('publicIpAddressDomainLabelName')]",
                    "fqdn": "[concat(parameters('globalName'), '.germanywestcentral.cloudapp.azure.com')]"
                }
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            }
        },
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "name": "[variables('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('virtualMachineStorageAccountType')]"
                        },
                        "name": "[variables('virtualMachineOsDiskName')]"
                    },
                    "imageReference": "[parameters('virtualMachineImageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        }
    ]
}